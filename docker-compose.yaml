#src: https://github.com/docker-library/docs/blob/master/postgres/README.md
# Use postgres/example user/password credentials
version: '3.1'

services:

  db:
    image: postgres
    build: 
      context: postgres
    container_name: photoproject-db
    restart: "no"
    environment:
      POSTGRES_PASSWORD: photoproject-password
      POSTGRES_USER: photoproject-username
  adminer:
    image: adminer
    container_name: adminer_interface
    restart: "no"
    ports:
      - 8080:8080
    depends_on:
      - db
    
  api:
    build: 
      context: api/src/main/docker/
      dockerfile: api.Dockerfile
    container_name: photoproject-api
    restart: "no"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://photoproject-db:5432/
      # maybe it needs to set database name after the last dash "/" above
      - SPRING_DATASOURCE_USERNAME=photoproject-username
      - SPRING_DATASOURCE_PASSWORD=photoproject-password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  app:
    build:
      context: app
      dockerfile: app.Dockerfile
    container_name: photoproject-app
    restart: "no"
    ports:
      - 9000:80
    depends_on:
    - db
    - api

# Run docker-compose -f Docker-compose.yml up,
#wait for it to initialize completely, and visit http://swarm-ip:8080, http://localhost:8080, or http://host-ip:8080 (as appropriate).

#If you would like to do additional initialization in an image derived from this one, add one or more *.sql, *.sql.gz, or *.sh scripts
# under /docker-entrypoint-initdb.d (creating the directory if necessary). After the entrypoint calls initdb to create the default postgres user and database,
# it will run any *.sql files, run any executable *.sh scripts, and source any non-executable *.sh scripts found in that directory to do further initialization before starting the service.


# Warning: scripts in /docker-entrypoint-initdb.d are only run if you start the container with a data directory that is empty;
# any pre-existing database will be left untouched on container startup. One common problem is that if one of your /docker-entrypoint-initdb.d scripts fails
# (which will cause the entrypoint script to exit) and your orchestrator restarts the container with the already initialized data directory, it will not continue on with your scripts.

# connection string $ docker exec -it main_container_full_name psql -h postgresdb -U docker mydatabase